{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Key Vault."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Azure region for the Key Vault."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "standard",
            "allowedValues": [
                "standard",
                "premium"
            ],
            "metadata": {
                "description": "SKU for the Key Vault (e.g., 'standard' or 'premium')."
            }
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "Tenant ID where the Key Vault will reside."
            }
        },
        "objectId": {
            "type": "string",
            "metadata": {
                "description": "Object ID of a user/group/service principal to grant initial access."
            }
        },
        "secretsPermissions": {
            "type": "array",
            "defaultValue": ["get", "list"],
            "metadata": {
                "description": "Array of permissions for secrets (e.g., [\"get\", \"list\"])"
            }
        },
        "keysPermissions": {
            "type": "array",
            "defaultValue": ["get", "list"],
            "metadata": {
                "description": "Array of permissions for keys."
            }
        },
        "certificatesPermissions": {
            "type": "array",
            "defaultValue": ["get", "list"],
            "metadata": {
                "description": "Array of permissions for certificates."
            }
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean, if VMs can retrieve certs from this vault."
            }
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean, if Azure Disk Encryption can use this vault."
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean, if ARM can retrieve secrets from this vault."
            }
        }
    },
    "variables": {
        "sku": {
            "name": "[parameters('skuName')]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-10-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": "[variables('sku')]",
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                    {
                        "objectId": "[parameters('objectId')]",
                        "tenantId": "[parameters('tenantId')]",
                        "permissions": {
                            "keys": "[parameters('keysPermissions')]",
                            "secrets": "[parameters('secretsPermissions')]",
                            "certificates": "[parameters('certificatesPermissions')]"
                        }
                    }
                ],
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]"
            }
        }
    ],
    "outputs": {
        "keyVaultName": {
            "type": "string",
            "value": "[parameters('keyVaultName')]"
        },
        "keyVaultUri": {
            "type": "string",
            "value": "[reference(parameters('keyVaultName')).vaultUri]"
        }
    }
}
